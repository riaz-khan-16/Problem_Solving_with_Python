Topic: OOP
Total 35 Questions





1. [Kunal's notes](https://github.com/kunal-kushwaha/DSA-Bootcamp-Java/tree/main/lectures/17-oop/notes)
2. [Object Oriented Paradigms](https://www.geeksforgeeks.org/object-oriented-programming-oops-concept-in-java/) GFG
3. [Constructors in Java](https://www.geeksforgeeks.org/constructors-in-java/) GFG
4. [Constructor chaining in Java](https://www.geeksforgeeks.org/constructor-chaining-java-examples/) GFG
5. [Inheritance in Java](https://www.geeksforgeeks.org/inheritance-in-java/) GFG
6. [Overriding in Java](https://www.geeksforgeeks.org/overriding-in-java/) GFG
7. [Abstraction in Java](https://www.geeksforgeeks.org/abstraction-in-java-2/) GFG
8. [Access modifiers in Java](https://www.geeksforgeeks.org/access-modifiers-java/) GFG
9. [Wrapper Classes in Java](https://www.geeksforgeeks.org/wrapper-classes-java/) GFG
10. [Need of wrapper classes in Java](https://www.geeksforgeeks.org/need-of-wrapper-classes-in-java/) GFG
11. [this keyowrd in Java](https://www.javatpoint.com/this-keyword) Javatpoint
12. [Important keyowrds in Java inheritance - extends,implements,super,instanceof](https://www.tutorialspoint.com/java/java_inheritance.htm) Tutorialspoint
13. [Instance initializer block](https://www.javatpoint.com/instance-initializer-block) Javatpoint
14. [Dynamic Method Dispatch or Runtime Polymorphism in Java](https://www.geeksforgeeks.org/dynamic-method-dispatch-runtime-polymorphism-java/) GFG
15. [Cohesion in Java](https://www.geeksforgeeks.org/cohesion-in-java/) GFG
16. [Coupling in Java](https://www.geeksforgeeks.org/coupling-in-java/) GFG

# **Interview Questions**

1. [Can we declare main() method as private or protected or with no access modifier in java?](https://www.tutorialspoint.com/can-we-declare-main-method-as-private-or-protected-or-with-no-access-modifier-in-java) Tutorialspoint
2. [Difference between Method Overloading and Method Overriding in Java?](https://www.geeksforgeeks.org/difference-between-method-overloading-and-method-overriding-in-java/) GFG
3. [Can we declare interface members as private or protected in java8?](https://www.tutorialspoint.com/can-we-declare-interface-members-as-private-or-protected-in-java8) Tutorialspoint
4. [Can we override a private or static method in Java?](https://www.tutorialspoint.com/can-we-override-a-private-or-static-method-in-java) Tutorialspoint
5. [What is diamond problem in Java?](https://www.javatpoint.com/what-is-diamond-problem-in-java) Javatpoint
6. [Can we pass this keyword as argument in a method call?](https://www.javatpoint.com/this-keyword#:~:text=this%3A%20to%20pass%20as%20an%20argument%20in%20the%20method) Javatpoint
7. [Java constructor returns a value, but what?](https://www.javatpoint.com/java-constructor-returns-a-value-but-what) Javatpoint
8. [What is covariant return type?](https://www.javatpoint.com/covariant-return-type) Javatpoint
9. [Private classes and singleton classes in Java](https://www.geeksforgeeks.org/private-constructors-and-singleton-classes-in-java/) GFG
10. [How to prevent Singleton Pattern from Reflection, Serialization and Cloning?](https://www.geeksforgeeks.org/prevent-singleton-pattern-reflection-serialization-cloning/) GFG
11. [Double-Check Locking For Singleton Class](https://www.geeksforgeeks.org/java-program-to-demonstrate-the-double-check-locking-for-singleton-class/) GFG

# **Practice Problems**

1. [Inheritance I](https://www.hackerrank.com/challenges/java-inheritance-1/problem?isFullScreen=true) HackerRank
2. [Inheritance II](https://www.hackerrank.com/challenges/java-inheritance-2/problem?isFullScreen=true) HackerRank
3. [Java Abstract class](https://www.hackerrank.com/challenges/java-abstract-class/problem?isFullScreen=true) HackerRank
4. [Interface](https://www.hackerrank.com/challenges/java-interface/problem?isFullScreen=true) HackerRank
5. [Method Overriding I](https://www.hackerrank.com/challenges/java-method-overriding/problem?isFullScreen=true) HackerRank
6. [Method Overriding II (Use super keyword)](https://www.hackerrank.com/challenges/java-method-overriding-2-super-keyword/problem?isFullScreen=true) HackerRank
7. [Java instanceof keyword](https://www.hackerrank.com/challenges/java-instanceof-keyword/problem?isFullScreen=true) HackerRank
8. [Java Iterator](https://www.hackerrank.com/challenges/java-iterator/problem?isFullScreen=true) HackerRank